<?xml version="1.0" encoding="utf-8"?>

<!--
//////////////////////////////////////////////////////////////////////////////////////
//
//    Copyright 2012 Adobe Systems Incorporated
//
//    This file is part of TMX to Moses Corpus Tool.
// 
//    TMX to Moses Corpus Tool is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Lesser General Public License as published by the 
//    Free Software Foundation, either version 3 of the License, or (at your option) 
//    any later version.
// 
//    TMX to Moses Corpus Tool is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
//    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for 
//    more details.
// 
//    You should have received a copy of the GNU Lesser General Public License along 
//    with TMX to Moses Corpus Tool.  If not, see <http://www.gnu.org/licenses/>.
//
//////////////////////////////////////////////////////////////////////////////////////
-->

<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" 
		  creationComplete="vgroup1_creationCompleteHandler(event)" 
		  xmlns:stepBox="com.Adobe.comps.stepBox.*">
	<fx:Script>
		<![CDATA[
			import com.Adobe.comps.DownArrowButton;
			import com.Adobe.comps.Steps;
			import com.Adobe.comps.UpArrowButton;
			import com.Adobe.comps.stepBox.StepBoxBase;
			import com.Adobe.config.UserConfig;
			import com.Adobe.events.StepEvent;
			import com.Adobe.managers.ProcessConfigManager;
			
			import mx.controls.HRule;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			
			private var _convConfigMgr:ProcessConfigManager = ProcessConfigManager.getInstance();
			private var _usrConfig:UserConfig = UserConfig.getInstance();
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				addEventListener(StepEvent.Step_State_Changed, stepStateChangeHandler);
				addEventListener(StepEvent.Step_Parameter_Changed, stepParameterChangeHandler);
				loadSteps();
			}
			
			
			private function loadSteps(language:String = ""):void
			{
				var processConfigMgr:ProcessConfigManager = ProcessConfigManager.getInstance();
				
				var stepBox:Steps = new Steps(language);
				
				var process:XML = new XML();
				

				process = processConfigMgr.getProcess(language);
				
				stepContainer.removeAllElements();
				
				for each (var step:XML in process.children())
				{
					var ruler:HRule = new HRule();
					ruler.percentWidth = 100;
					
					stepContainer.addElement(ruler);
					
					stepContainer.addElement(stepBox.stepMap[step.toXMLString()]);
				}
				
				for (var i:int = 1; i < stepContainer.numElements; i += 2)
				{
					stepContainer.getElementAt(i).addEventListener(MouseEvent.ROLL_OVER, stepBox_rollOverHandler);
					stepContainer.getElementAt(i).addEventListener(MouseEvent.ROLL_OUT, stepBox_rollOutHandler);
					
					stepContainer.getElementAt(i).dispatchEvent(new StepEvent(StepEvent.Step_Order_Changed));
				}
			}
			
			
			protected function stepParameterChangeHandler(event:StepEvent):void
			{
				if (langList.selectedIndex != -1)
				{
					_convConfigMgr.changeStepParameters(langList.selectedItem.toString(), (stepContainer.getElementIndex(StepBoxBase(event.target)) - 1)/2, event.parameters);
				}
			}
			
			
			protected function stepStateChangeHandler(event:StepEvent):void
			{
				if (langList.selectedIndex != -1)
				{
					_convConfigMgr.switchStepState(langList.selectedItem.toString(), (stepContainer.getElementIndex(StepBoxBase(event.target)) - 1)/2, event.target.selected);
				}
			}
			
			
			protected function stepBox_rollOverHandler(event:MouseEvent):void
			{
				var arrowBox:HGroup = new HGroup();
				var upBtn:UpArrowButton = new UpArrowButton();
				var DwnBtn:DownArrowButton = new DownArrowButton();
				
				arrowBox.addElement(upBtn);
				arrowBox.addElement(DwnBtn);
				event.currentTarget.addElementAt(arrowBox, event.currentTarget.numElements);
			}
			

			protected function stepBox_rollOutHandler(event:MouseEvent):void
			{
				event.currentTarget.removeElementAt(event.currentTarget.numElements - 1);
			}


			protected function btnResetOrder_clickHandler(event:MouseEvent):void
			{
				if (langList.selectedIndex != -1)
				{
					_convConfigMgr.saveDefaultProcess(langList.selectedItem.toString(), true);
					
					loadSteps(langList.selectedItem.toString());					
				}
			}
			

			protected function langList_changeHandler(event:ListEvent):void
			{
				loadSteps(event.currentTarget.selectedItem.toString());
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:HGroup width="100%" verticalAlign="middle">
		<mx:Text text="Please select your converting options for each language:"/>
		<mx:ComboBox id="langList" change="langList_changeHandler(event)"/>
		<mx:Spacer width="100%"/>
		<mx:Button label="Reset Steps" click="btnResetOrder_clickHandler(event)"/>
	</s:HGroup>
	<mx:Spacer width="100%"/>
	<s:VGroup id="stepContainer" width="100%"/>
</s:VGroup>
